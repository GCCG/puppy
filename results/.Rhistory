library(Rdonlp2)
p = c(10,10)    #迭代初始值
par.l = c(-100,-100); par.u = c(100,100) # 目标值域
# 目标
fn = function(x){
  x[1]^2*sin(x[2])+x[2]^2*cos(x[1])
}
# 行构成线性约束
A = matrix(c(1,1,3,-1),2,byrow=TRUE)
lin.l = c(2,1); lin.u = c(+Inf,3)  
# 构成非线性约束 
nlcon1 = function(x){
  x[1]*x[2]
} 
nlcon2 = function(x){
  sin(x[1])*cos(x[2])
}
nlin.l = c(2,-Inf)
nlin.u = c(2,0.6)  
# 求解
ret = donlp2(p, fn, par.u=par.u, par.l=par.l,A, lin.l=lin.l, lin.u=lin.u, nlin = list(nlcon1,nlcon2), nlin.u = nlin.u, nlin.l = nlin.l)
install.packages("Rdonlp2", repos="http://R-Forge.R-project.org")
q()
getwd()
setwd("C:/Users/DELL/OneDrive/文档/WorkSpace/S_Code/puppy/results")
getwd()
data <- read.csv("lb.csv", header = FALSE)
data
data(1)
data[1]
data[1,0]
data[0]
data[0,1]
data[0,2]
data
data[0,2]
data[0,1]
dim(data)
data[10,1]
c(data)
x <- c(data)
x[1]
x[1,1]
dim(x)
A <- read.csv("A.csv", header = FALSE)
lb <- read.csv("lb.csv" header = FALSE)
lb <- read.csv("lb.csv" header = FALSE)
lb <- read.csv("lb.csv" header = FALSE)
lb <- read.csv("lb.csv", header = FALSE)
A%*%lb
A[0,0]
dim(A)
dim(A)
as.matrix(A)
A1 = as.matrix(A)
A1[0,0]
lb1 = as.matrix(lb)
A1[0,0]*A1[0,1]
clear
cl
cls
A1 = as.matrix(A)
A1
A <- read.csv("A.csv", header = FALSE)
A
A1[10,10]
A[10,10]
dim(A)
A1 = as.matrix(A)
A1
dim(A1)
type_convert(A)
matrix(A)
matrix(A,100,72)
A <- read.csv("A.csv", header = FALSE)
A
A <- read.txt(A.txt)
A <- read.table(A.txt)
A <- read.table("A.txt")
A
A[0,0]
A + A
A * 0.25
lb = read.table("lb.txt")
lb
A%*%lb
lb+lb
A = as.matrix(A)
lb = as.matrix(lb)
A%*%lb
lb%*%A
dim(A)
dim(lb)
x = read.table("x0.txt")
x = as.matrix(x)
dim(x)
dim(t(x))
A%*%t(x)
c(1:10)
para <- as.matrix(read.txt("para.txt", header = FALSE))
para <- as.matrix(read.table("para.txt", header = FALSE))
para <- as.matrix(read.table("para.txt", header = FALSE))
dim(para)
para
para[0]
para[1]
server_num<-6
(1:server_num)
q()
q()
q()
q()
